SELECT * FROM JOB1
CREATE PROCEDURE spGetJOB3
@JOB_ID NVARCHAR(10)
AS
BEGIN
   UPDATE JOB SET JOB_TITLE = 'ROHIL SHAH' WHERE JOB_ID=@JOB_ID
END
EXEC spGetJOB3 'FI_MGR'

-->
SELECT * FROM ATTENDENCE1
ALTER PROCEDURE ATTENDENCE11
@ATT_STATUS NVARCHAR(9),
@ATT_DAY NVARCHAR(8)
WITH ENCRYPTION
AS
BEGIN
  SELECT EMP_ID,A_DATE FROM ATTENDENCE1 WHERE ATT_STATUS=@ATT_STATUS AND ATT_DAY=@ATT_DAY
END
EXEC ATTENDENCE11 'PRESENT','SUNDAY'
SP_HELP 'ATTENDENCE11'

CREATE PROCEDURE R_ATTENDENCE11
@ATT_STATUS NVARCHAR(9),
@COUNT INT OUTPUT
AS
BEGIN
  SELECT @COUNT = COUNT(*) FROM ATTENDENCE1 WHERE ATT_STATUS = @ATT_STATUS
END

DECLARE @MYTOTALCOUNT INT
EXEC R_ATTENDENCE11 @ATT_STATUS = 'PRESENT' , @COUNT = @MYTOTALCOUNT OUTPUT
SELECT @MYTOTALCOUNT  

sp_helptext 'R_ATTENDENCE11'
SP_HELP 'R_ATTENDENCE11'

-->EXAMPLE OF SCALAR FUNCTION
SELECT * FROM EMPLOYEE1

CREATE FUNCTION RF_EMPLOYEE1(@EMP_ID INT) 
RETURNS MONEY 
AS
BEGIN
DECLARE 
@BASIC MONEY,
@HRA MONEY,
@DA MONEY,
@PF MONEY,
@GROSS MONEY
  SELECT @BASIC = EMP_SAL FROM EMPLOYEE1 WHERE EMP_ID=@EMP_ID

  SET @HRA = @BASIC * 0.1
  SET @DA = @BASIC * 0.2
  SET @PF = @BASIC * 0.1
  SET @GROSS = @BASIC + @HRA + @DA + @PF
RETURN @GROSS
END

SELECT DBO.RF_EMPLOYEE1(105)

-->EXAMPLE 2
SELECT * FROM ATTENDENCE1

CREATE FUNCTION RF_ATTENDENCE1(@EMP_ID INT)
RETURNS VARCHAR(100)
AS
BEGIN
DECLARE @ATT_STATUS NVARCHAR(20)
   SELECT @ATT_STATUS = ATT_STATUS FROM ATTENDENCE1 WHERE EMP_ID = @EMP_ID
RETURN @ATT_STATUS
END

SELECT DBO.RF_ATTENDENCE1(107)

-->EXAMPLE 3
CREATE FUNCTION SHOWMESSAGE()
RETURNS VARCHAR(100)
AS
BEGIN
   RETURN 'WELCOME TO SQL SERVER'
END

SELECT DBO.SHOWMESSAGE()

-->EXAMPLE 4
CREATE FUNCTION TakeANumber(@NUM AS INT)
RETURNS INT
AS
BEGIN
  RETURN (@NUM*@NUM)
END

SELECT DBO.TakeANumber(10)

-->EXAMPLE 5
CREATE FUNCTION TAKEADDITION(@NUM1 AS INT, @NUM2 AS INT)
RETURNS INT
AS
BEGIN
  RETURN (@NUM1 + @NUM2)
END

SELECT DBO.TAKEADDITION(10,20)

DROP FUNCTION TAKEADDITION

-->EXAMPLE 6(IF N ELSE)
CREATE FUNCTION CHECVOTESAGE(@AGE AS INT)
RETURNS VARCHAR(100)
AS
BEGIN
  DECLARE @STR VARCHAR(90)
  IF(@AGE>=18)
  BEGIN
     SET @STR = 'APPLY TO VOTE'
  END
  ELSE
  BEGIN
     SET @STR = 'NOT APPLY'
  END
  RETURN @STR
END

SELECT DBO.CHECVOTESAGE(19)

-->EXAMPLE 7
CREATE FUNCTION DATANTIME()
RETURNS DATETIME
AS
BEGIN
   RETURN GETDATE()
END

SELECT DBO.DATANTIME();

-->EXAMPLE:8 INLINE USER DEFINED FUNCTION
CREATE FUNCTION FN_GETEMPLOYEE()
RETURNS TABLE
AS
RETURN(SELECT * FROM EMPLOYEE1)

SELECT * FROM DBO.FN_GETEMPLOYEE()

-->EXAMPLE:8.1
ALTER FUNCTION FN_GETEMPLOYEEWITHSALARY()
RETURNS TABLE
AS
RETURN(SELECT * FROM EMPLOYEE1 WHERE EMP_SAL>25000)

SELECT * FROM DBO.FN_GETEMPLOYEEWITHSALARY()

-->EXAMPLE:8.2
CREATE FUNCTION FN_GETEMPLOYEEWITHID(@EMP_ID INT)
RETURNS TABLE
AS
RETURN(SELECT * FROM EMPLOYEE1 WHERE EMP_ID = @EMP_ID )
SELECT * FROM DBO.FN_GETEMPLOYEEWITHID(105)

-->EXAMPLE 8.3--WITH INNER JOIN
SELECT * FROM FN_GETEMPLOYEEWITHSALARY() AS A INNER JOIN ATTENDENCE1 AS B ON A.EMP_ID = B.EMP_ID

-->EXAMPLE:9 MULTI TABLE VALUED FUNCTION
ALTER FUNCTION GETATTENDNCE(@A_DATE DATE)
RETURNS @MYTABLE TABLE (ATT_DAY VARCHAR(10), EMP_ID INT)
AS
BEGIN
   INSERT INTO @MYTABLE
   SELECT ATT_DAY, EMP_ID FROM ATTENDENCE1 WHERE A_DATE = @A_DATE

   RETURN 
END

SELECT * FROM [DBO].[GETATTENDNCE]('2022-01-14')
