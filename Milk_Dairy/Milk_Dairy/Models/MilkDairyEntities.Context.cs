//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Milk_Dairy.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MilkDairyEntities : DbContext
    {
        public MilkDairyEntities()
            : base("name=MilkDairyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Dairy> Dairies { get; set; }
        public virtual DbSet<Dairy4> Dairy4 { get; set; }
        public virtual DbSet<DairyCustomer> DairyCustomers { get; set; }
        public virtual DbSet<DairySubscription> DairySubscriptions { get; set; }
        public virtual DbSet<PrintAndMessageSetting> PrintAndMessageSettings { get; set; }
        public virtual DbSet<Subscription4> Subscription4 { get; set; }
    
        public virtual ObjectResult<DairyCustomersSHOW_Result> DairyCustomersSHOW(Nullable<int> rowsOfPage, Nullable<int> pageNumber, string colName, Nullable<int> dairyId, string regex)
        {
            var rowsOfPageParameter = rowsOfPage.HasValue ?
                new ObjectParameter("RowsOfPage", rowsOfPage) :
                new ObjectParameter("RowsOfPage", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var colNameParameter = colName != null ?
                new ObjectParameter("ColName", colName) :
                new ObjectParameter("ColName", typeof(string));
    
            var dairyIdParameter = dairyId.HasValue ?
                new ObjectParameter("DairyId", dairyId) :
                new ObjectParameter("DairyId", typeof(int));
    
            var regexParameter = regex != null ?
                new ObjectParameter("regex", regex) :
                new ObjectParameter("regex", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DairyCustomersSHOW_Result>("DairyCustomersSHOW", rowsOfPageParameter, pageNumberParameter, colNameParameter, dairyIdParameter, regexParameter);
        }
    
        public virtual ObjectResult<DairyCustomersSHOWL_Result> DairyCustomersSHOWL(Nullable<int> dairyid)
        {
            var dairyidParameter = dairyid.HasValue ?
                new ObjectParameter("Dairyid", dairyid) :
                new ObjectParameter("Dairyid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DairyCustomersSHOWL_Result>("DairyCustomersSHOWL", dairyidParameter);
        }
    
        public virtual ObjectResult<milkdairyfilter_Result> milkdairyfilter(Nullable<int> rowsOfPage, Nullable<int> pageNumber, string column, string pagematch)
        {
            var rowsOfPageParameter = rowsOfPage.HasValue ?
                new ObjectParameter("RowsOfPage", rowsOfPage) :
                new ObjectParameter("RowsOfPage", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var columnParameter = column != null ?
                new ObjectParameter("Column", column) :
                new ObjectParameter("Column", typeof(string));
    
            var pagematchParameter = pagematch != null ?
                new ObjectParameter("pagematch", pagematch) :
                new ObjectParameter("pagematch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<milkdairyfilter_Result>("milkdairyfilter", rowsOfPageParameter, pageNumberParameter, columnParameter, pagematchParameter);
        }
    }
}
